[{"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\index.js":"1","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\App.js":"2","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\store\\CartProvider.js":"3","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Cart\\Cart.js":"4","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Layout\\Header.js":"5","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Meals\\Meals.js":"6","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\store\\cart-context.js":"7","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Cart\\CartItem.js":"8","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Meals\\MealsSummary.js":"9","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Layout\\HeaderCartButton.js":"10","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Meals\\AvailableMeals.js":"11","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\UI\\Modal.js":"12","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Cart\\CartIcon.js":"13","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\UI\\Card.js":"14","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Meals\\MealItems\\MealItem.js":"15","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Meals\\MealItems\\MealItemForm.js":"16","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\UI\\Input.js":"17","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Cart\\Checkout.js":"18"},{"size":179,"mtime":1648642748000,"results":"19","hashOfConfig":"20"},{"size":744,"mtime":1666602370230,"results":"21","hashOfConfig":"20"},{"size":3186,"mtime":1666596812310,"results":"22","hashOfConfig":"20"},{"size":4374,"mtime":1666605717576,"results":"23","hashOfConfig":"20"},{"size":590,"mtime":1663090636421,"results":"24","hashOfConfig":"20"},{"size":343,"mtime":1666429162190,"results":"25","hashOfConfig":"20"},{"size":214,"mtime":1666435450703,"results":"26","hashOfConfig":"20"},{"size":612,"mtime":1663347184835,"results":"27","hashOfConfig":"20"},{"size":546,"mtime":1663002080786,"results":"28","hashOfConfig":"20"},{"size":1472,"mtime":1666427462703,"results":"29","hashOfConfig":"20"},{"size":2160,"mtime":1666435663005,"results":"30","hashOfConfig":"20"},{"size":844,"mtime":1663091281055,"results":"31","hashOfConfig":"20"},{"size":523,"mtime":1663001284477,"results":"32","hashOfConfig":"20"},{"size":204,"mtime":1663004940892,"results":"33","hashOfConfig":"20"},{"size":912,"mtime":1663175280920,"results":"34","hashOfConfig":"20"},{"size":1344,"mtime":1663258208418,"results":"35","hashOfConfig":"20"},{"size":639,"mtime":1663258346639,"results":"36","hashOfConfig":"20"},{"size":3369,"mtime":1666599714824,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1hqejm1",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\index.js",[],["80","81"],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\App.js",["82"],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\store\\CartProvider.js",[],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Cart\\Cart.js",["83","84"],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Layout\\Header.js",[],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Meals\\Meals.js",["85"],"import { Fragment } from \"react\";\r\nimport MealsSummary from \"./MealsSummary\";\r\nimport AvailableMeals from \"./AvailableMeals\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Meals() {\r\n\r\n  return (\r\n    <Fragment>\r\n      <MealsSummary></MealsSummary>\r\n      <AvailableMeals></AvailableMeals>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Meals;\r\n","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\store\\cart-context.js",["86"],"import React, { createContext } from \"react\";\r\n\r\nconst CartContext = React.createContext({\r\n  items: [],\r\n  totalAmount: 0,\r\n  addItem: (item) => {},\r\n  removeItem: (id) => {},\r\n});\r\n\r\nexport default CartContext;\r\n","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Cart\\CartItem.js",[],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Meals\\MealsSummary.js",[],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Layout\\HeaderCartButton.js",["87"],"import classes from './HeaderCartButton.module.css';\r\nimport CardIcon from '../Cart/CartIcon'\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport CartContext from '../../store/cart-context';\r\n\r\nfunction HeaderCartButton(props) {\r\n\r\n    const cartCtx = useContext(CartContext);\r\n    const [btnHighLighted, setbtnHighLighted] = useState(false);\r\n\r\n    const { items } = cartCtx;\r\n\r\n    const numberOfCartItems = items.reduce((curNumber, item) => {\r\n        return curNumber + item.amount;\r\n    }, 0);\r\n    //reduce() Ez egy olyan módszer, amely lehetővé teszi egy tömb átalakítását adatokat egyetlen értékké ebben az esetben egyetlen számba.\r\n\r\n    const btnClasses = `${classes.button} ${btnHighLighted ? classes.bump : ''}`;\r\n\r\n    useEffect(() => {\r\n        if(cartCtx.items.length === 0){\r\n            return;\r\n        }\r\n        setbtnHighLighted(true);\r\n\r\n        const timer = setTimeout(() => {\r\n            setbtnHighLighted(false)\r\n        }, 300);\r\n        return () => {\r\n            clearTimeout(timer);\r\n        }\r\n       \r\n    }, [items]);\r\n\r\n    return ( \r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CardIcon></CardIcon>\r\n            </span>\r\n            <span>Your Cart</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n     );\r\n}\r\n\r\nexport default HeaderCartButton;","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Meals\\AvailableMeals.js",["88"],"import classes from \"./AvailableMeals.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItems/MealItem\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst DUMMY_MEALS = [\r\n  {\r\n    id: \"m1\",\r\n    name: \"Sushi\",\r\n    description: \"Finest fish and veggies\",\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    name: \"Schnitzel\",\r\n    description: \"A german specialty!\",\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: \"m3\",\r\n    name: \"Barbecue Burger\",\r\n    description: \"American, raw, meaty\",\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: \"m4\",\r\n    name: \"Green Bowl\",\r\n    description: \"Healthy...and green...\",\r\n    price: 18.99,\r\n  },\r\n];\r\n\r\n\r\n\r\nfunction AvailableMeals() {\r\n\r\n    const [meals, setMeals] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n  \r\n    const fetchMealsHandler = async () => {\r\n      setIsLoading(true)\r\n      try{\r\n      const response = await fetch(\r\n        \"https://meals-afbb8-default-rtdb.firebaseio.com/meals.json\"\r\n      );\r\n\r\n      if(!response.ok){\r\n        throw new Error('Something went wrong!');\r\n      }\r\n      const data = await response.json();\r\n  \r\n      const loadedMeals = [];\r\n  \r\n      for (const key in data) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: data[key].name,\r\n          description: data[key].description,\r\n          price: data[key].price,\r\n        });\r\n      }\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false)\r\n    }\r\n    catch(error){\r\n      setError(error.message)\r\n    }\r\n    }\r\n\r\nuseEffect(() =>{\r\n  fetchMealsHandler()\r\n}, [])\r\n\r\n\r\n  console.log(meals)\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    ></MealItem>\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n        {isLoading && !error && <p className={classes.loading}>Loading...</p>}\r\n        {error && <p className={classes.error}>{error}</p>}\r\n      </Card>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AvailableMeals;\r\n","C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\UI\\Modal.js",[],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Cart\\CartIcon.js",[],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\UI\\Card.js",[],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Meals\\MealItems\\MealItem.js",[],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Meals\\MealItems\\MealItemForm.js",[],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\UI\\Input.js",[],"C:\\Users\\Adam\\Desktop\\Git\\React-Food-Order\\src\\components\\Cart\\Checkout.js",["89"],"import { useRef, useState } from \"react\";\r\nimport classes from \"../Cart/Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isPostal = (value) => value.trim().length !== 5;\r\n\r\nfunction Checkout(props) {\r\n  const [formIsValid, setFormIsValid] = useState({\r\n    name: true,\r\n    street: true,\r\n    postalCode: true,\r\n    city: true,\r\n  });\r\n\r\n  const [inputTouched, setInputTouched] = useState(false);\r\n\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    setInputTouched(true)\r\n    \r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostal = postalInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const eneteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredPostalIsValid = !isPostal(enteredPostal);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n\r\n\r\n\r\n    setFormIsValid({\r\n      name: eneteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      postalCode: enteredPostalIsValid,\r\n      city: enteredCityIsValid,\r\n    });\r\n\r\n    const validate = enteredName && enteredStreet && enteredCity && enteredPostal\r\n\r\n    if(!validate){\r\n      return;\r\n    }\r\n\r\n    props.submitOrderHandler({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostal\r\n    })\r\n\r\n    console.log(enteredName);\r\n    setInputTouched(false)\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${formIsValid.name ? '' : classes.invalid}`;\r\n  const streetControlClasses = `${classes.control} ${formIsValid.street ? '' : classes.invalid}`;\r\n  const postalControlClasses = `${classes.control} ${formIsValid.postalCode ? '' : classes.invalid}`;\r\n  const cityControlClasses = `${classes.control} ${formIsValid.city ? '' : classes.invalid}`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input ref={nameInputRef} type=\"text\" id=\"name\"></input>\r\n        {!formIsValid.name && <p>Your name is not be empty!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input ref={streetInputRef} type=\"text\" id=\"street\"></input>\r\n        {!formIsValid.street && <p>Street is not be empty!</p>}\r\n      </div>\r\n      <div className={postalControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input ref={postalInputRef} type=\"text\" id=\"postal\"></input>\r\n        {!formIsValid.postalCode && <p>Postal code is not be empty!</p>}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input ref={cityInputRef} type=\"text\" id=\"city\"></input>\r\n        {!formIsValid.city && <p>City is not be empty!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.showCartItems}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Checkout;\r\n",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":22},{"ruleId":"98","severity":1,"message":"99","line":114,"column":7,"nodeType":"100","endLine":114,"endColumn":60},{"ruleId":"98","severity":1,"message":"99","line":127,"column":9,"nodeType":"100","endLine":127,"endColumn":51},{"ruleId":"94","severity":1,"message":"101","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":18},{"ruleId":"94","severity":1,"message":"102","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":33,"column":8,"nodeType":"105","endLine":33,"endColumn":15,"suggestions":"106"},{"ruleId":"94","severity":1,"message":"107","line":6,"column":7,"nodeType":"96","messageId":"97","endLine":6,"endColumn":18},{"ruleId":"94","severity":1,"message":"108","line":15,"column":10,"nodeType":"96","messageId":"97","endLine":15,"endColumn":22},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'AvailableMeals' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'createContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cartCtx.items.length'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'DUMMY_MEALS' is assigned a value but never used.","'inputTouched' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [cartCtx.items.length, items]",{"range":"114","text":"115"},[1057,1064],"[cartCtx.items.length, items]"]